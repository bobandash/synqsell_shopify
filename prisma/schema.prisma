// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string

// Common commands: 
// npx prisma migrate dev

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// by default generated by shopify (after auth)
// this is offline access
// does not expire until the user removes the application
// Before deployment, refactor so that all the database items are connected to the session instead of having its own shop field
model Session {
  id                 String              @id
  shop               String
  state              String
  isOnline           Boolean             @default(false)
  scope              String?
  expires            DateTime?           @db.Timestamp
  accessToken        String
  userId             BigInt?
  firstName          String?
  lastName           String?
  email              String?
  accountOwner       Boolean             @default(false)
  locale             String?
  collaborator       Boolean?            @default(false)
  emailVerified      Boolean?            @default(false)
  Role               Role[]
  Profile            Profile?
  ChecklistStatus    ChecklistStatus[]
  UserPreference     UserPreference?
  FulfillmentService FulfillmentService?
}

model FulfillmentService {
  id                   String  @id @default(uuid())
  fulfillmentServiceId String
  Session              Session @relation(fields: [sessionId], references: [id])
  sessionId            String  @unique
}

model UserPreference {
  id             String   @id @default(uuid())
  session        Session  @relation(fields: [sessionId], references: [id])
  tableIdsHidden String[]
  sessionId      String   @unique
}

model ChecklistTable {
  id             String          @id @default(uuid())
  position       Int
  header         String
  subheader      String?
  checklistItems ChecklistItem[]
}

model ChecklistItem {
  id               String            @id @default(uuid())
  key              String            @unique
  ChecklistTable   ChecklistTable    @relation(fields: [checklistTableId], references: [id])
  checklistTableId String
  position         Int
  header           String
  subheader        String?
  buttonText       String?
  checklistStatus  ChecklistStatus[]
}

model ChecklistStatus {
  id              String        @id @default(uuid())
  Session         Session       @relation(fields: [sessionId], references: [id])
  sessionId       String
  ChecklistItem   ChecklistItem @relation(fields: [checklistItemId], references: [id])
  checklistItemId String
  isCompleted     Boolean
}

model Role {
  id        String  @id @default(uuid())
  name      String
  Session   Session @relation(fields: [sessionId], references: [id])
  sessionId String
}

model Profile {
  id              String  @id @default(uuid())
  name            String
  email           String
  logo            String
  biography       String
  desiredProducts String
  Session         Session @relation(fields: [sessionId], references: [id])
  sessionId       String  @unique
}
